import type { Nuxt } from '@nuxt/schema'
import type { VuetifyNuxtContext } from '../context'
import type { IconsOptions } from '../types'
import { addPluginTemplate } from '@nuxt/kit'
import { registerIconFonts } from './font'
import { prepareUnoCSSIconSet } from './unocss'
import { prepareIcons } from './utils'

export function prepareIconsRuntime(
  nuxt: Nuxt,
  ctx: VuetifyNuxtContext,
) {
  const { icons } = ctx.moduleOptions
  if (icons === false)
    return

  const options: IconsOptions = icons === true
    ? {
        defaultSet: 'mdi',
      }
    : icons ?? {
      defaultSet: 'mdi',
    }

  const resolvedOptions = prepareIcons(ctx.unocss, ctx.logger, options)
  if (resolvedOptions.enabled) {
    // UnoCSS support
    prepareUnoCSSIconSet(resolvedOptions)
    // CDN and local icon fonts support
    registerIconFonts(nuxt, resolvedOptions/* , ctx.icons */)

    resolvedOptions.registerIconsPlugin = !!ctx.vuetifyOptions.vuetifyOptions.icons?.$ast
    if (resolvedOptions.registerIconsPlugin) {
      addPluginTemplate({
        write: true,
        filename: 'vuetify/plugins/icons.mjs',
        getContents: () => {
          return `// Generated by vuetify-nuxt-module
import { defineNuxtPlugin } from '#imports'

export default defineNuxtPlugin({
  name: 'vuetify:icons:plugin',
  parallel: true,
  setup(nuxtApp) {
    nuxtApp.hook('vuetify:before-create', ({ vuetifyOptions }) => {
    })
  }
})
`
        },
      })
    }
  }

  ctx.icons = resolvedOptions
}
